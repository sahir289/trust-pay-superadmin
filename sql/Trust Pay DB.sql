-- Set the schema search path to 'public' (or your desired schema)
SET search_path TO public;

-- Create the schema if it doesn't exist (optional, since 'public' exists by default)
CREATE SCHEMA IF NOT EXISTS public;

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Company Table
CREATE TABLE "Company" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "first_name" varchar NOT NULL,
  "last_name" varchar NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "contact_no" varchar UNIQUE NOT NULL,
  "config" json NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "is_obsolete" boolean DEFAULT false
);

-- Role Table
CREATE TABLE "Role" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "role" varchar NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "is_obsolete" boolean DEFAULT false
);

-- Designation Table
CREATE TABLE "Designation" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "designation" varchar NOT NULL UNIQUE,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "is_obsolete" boolean DEFAULT false,
  "role_id" varchar NOT NULL
);

-- User Table
CREATE TABLE "User" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "role_id" varchar NOT NULL,
  "company_id" varchar NOT NULL,
  "designation_id" varchar NOT NULL,
  "first_name" varchar NOT NULL,
  "last_name" varchar NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "contact_no" varchar UNIQUE NOT NULL,
  "user_name" varchar UNIQUE NOT NULL,
  "password" varchar NOT NULL,
  "code" varchar UNIQUE,
  "is_enabled" boolean DEFAULT true,
  "last_login" TIMESTAMPTZ,
  "last_logout" TIMESTAMPTZ,
  "config" json NOT NULL DEFAULT '{}',
  "created_by" varchar,
  "updated_by" varchar,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "is_obsolete" boolean DEFAULT false
);

-- Merchant Table
CREATE TABLE "Merchant" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "user_id" varchar NOT NULL UNIQUE,
  "first_name" varchar NOT NULL,
  "last_name" varchar NOT NULL,
  "code" varchar UNIQUE NOT NULL,
  "min_payin" float NOT NULL,
  "max_payin" float NOT NULL,
  "payin_commission" float NOT NULL,
  "min_payout" float NOT NULL,
  "max_payout" float NOT NULL,
  "payout_commission" float NOT NULL,
  "is_test_mode" boolean DEFAULT false,
  "is_enabled" boolean DEFAULT true,
  "dispute_enabled" boolean DEFAULT true,
  "is_demo" boolean DEFAULT false,
  "balance" float NOT NULL,
  "company_id" varchar NOT NULL,
  "config" json NOT NULL DEFAULT '{}',
  "created_by" varchar,
  "updated_by" varchar,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "is_obsolete" boolean DEFAULT false
);

-- Vendor Table
CREATE TABLE "Vendor" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "user_id" varchar NOT NULL UNIQUE,
  "first_name" varchar NOT NULL,
  "last_name" varchar NOT NULL,
  "code" varchar UNIQUE NOT NULL,
  "payin_commission" float NOT NULL,
  "payout_commission" float NOT NULL,
  "balance" float NOT NULL,
  "created_by" varchar,
  "updated_by" varchar,
  "config" json NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false
);

-- AccessToken Table
CREATE TABLE "AccessToken" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "user_id" varchar NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false,
  "config" json NOT NULL DEFAULT '{}',
  "session_id" varchar
);

-- UserHierarchy Table
CREATE TABLE "UserHierarchy" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "user_id" varchar NOT NULL UNIQUE,
  "config" json NOT NULL DEFAULT '{}',
  "created_by" varchar,
  "updated_by" varchar,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false
);

-- BankAccount Table
CREATE TABLE "BankAccount" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar NOT NULL,
  "upi_id" varchar NOT NULL,
  "upi_params" varchar,
  "nick_name" varchar NOT NULL UNIQUE,
  "acc_holder_name" varchar NOT NULL,
  "acc_no" varchar NOT NULL,
  "ifsc" varchar NOT NULL,
  "bank_name" varchar NOT NULL,
  "is_qr" boolean DEFAULT false,
  "is_bank" boolean DEFAULT false,
  "min" float NOT NULL,
  "max" float NOT NULL,
  "is_enabled" boolean DEFAULT false,
  "payin_count" integer NOT NULL,
  "balance" float NOT NULL DEFAULT 0,
  "today_balance" float NOT NULL DEFAULT 0,
  "bank_used_for" varchar DEFAULT '',
  "config" json NOT NULL DEFAULT '{}',
  "created_by" varchar,
  "updated_by" varchar,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false
);

-- BankResponse Table
CREATE TABLE "BankResponse" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "status" varchar NOT NULL,
  "bank_id" varchar NOT NULL,
  "amount" float NOT NULL,
  "upi_short_code" varchar,
  "utr" varchar,
  "is_used" boolean NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "created_by" varchar,
  "updated_by" varchar,
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false,
  "config" json NOT NULL DEFAULT '{}'
);

-- Payin Table
CREATE TABLE "Payin" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "upi_short_code" varchar NOT NULL,
  "qr_params" varchar,
  "amount" float NOT NULL,
  "status" varchar NOT NULL,
  "is_notified" boolean NOT NULL DEFAULT false,
  "user_submitted_utr" varchar,
  "currency" varchar NOT NULL,
  "merchant_order_id" varchar NOT NULL,
  "user" varchar NOT NULL,
  "bank_acc_id" varchar,
  "merchant_id" varchar NOT NULL,
  "bank_response_id" varchar,
  "payin_merchant_commission" float,
  "payin_vendor_commission" float,
  "user_submitted_image" varchar,
  "duration" varchar,
  "is_url_expires" boolean DEFAULT false,
  "expiration_date" TIMESTAMPTZ NOT NULL,
  "one_time_used" boolean DEFAULT false,
  "approved_at" TIMESTAMPTZ,
  "failed_at" TIMESTAMPTZ,
  "config" json NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean NOT NULL DEFAULT false,
  "created_by" varchar,
  "updated_by" varchar
);

-- Payout Table
CREATE TABLE "Payout" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "user" varchar NOT NULL,
  "merchant_id" varchar NOT NULL,
  "vendor_id" varchar,
  "bank_acc_id" varchar,
  "amount" float NOT NULL,
  "status" varchar NOT NULL DEFAULT 'INITIATED',
  "failed_reason" varchar,
  "currency" varchar NOT NULL DEFAULT 'INR',
  "merchant_order_id" varchar NOT NULL,
  "acc_no" varchar NOT NULL,
  "acc_holder_name" varchar NOT NULL,
  "ifsc_code" varchar NOT NULL,
  "bank_name" varchar,
  "upi_id" varchar,
  "utr_id" varchar,
  "rejected_reason" varchar,
  "payout_merchant_commission" float NOT NULL DEFAULT 0,
  "payout_vendor_commission" float NOT NULL DEFAULT 0,
  "approved_at" TIMESTAMPTZ,
  "rejected_at" TIMESTAMPTZ,
  "config" json NOT NULL DEFAULT '{}',
  "created_by" varchar,
  "updated_by" varchar,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false
);

-- Settlement Table
CREATE TABLE "Settlement" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "user_id" varchar NOT NULL,
  "status" varchar NOT NULL,
  "amount" float NOT NULL,
  "method" varchar NOT NULL,
  "config" json NOT NULL DEFAULT '{}',
  "approved_at" TIMESTAMPTZ,
  "rejected_at" TIMESTAMPTZ,
  "created_by" varchar,
  "updated_by" varchar,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false
);

-- Calculation Table
CREATE TABLE "Calculation" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "user_id" varchar NOT NULL,
  "role_id" varchar NOT NULL,
  "total_payin_count" integer DEFAULT 0,
  "total_payin_amount" float DEFAULT 0,
  "total_payin_commission" float DEFAULT 0,
  "total_payout_count" integer DEFAULT 0,
  "total_payout_amount" float DEFAULT 0,
  "total_payout_commission" float DEFAULT 0,
  "total_settlement_count" integer DEFAULT 0,
  "total_settlement_amount" float DEFAULT 0,
  "total_chargeback_count" integer DEFAULT 0,
  "total_chargeback_amount" float DEFAULT 0,
  "total_reverse_payout_count" integer DEFAULT 0,
  "total_reverse_payout_amount" float DEFAULT 0,
  "total_reverse_payout_commission" float DEFAULT 0,
  "current_balance" float DEFAULT 0,
  "net_balance" float DEFAULT 0,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "total_settlement_commission" float DEFAULT 0,
  "total_adjustment_amount" float DEFAULT 0,
  "total_adjustment_count" integer DEFAULT 0,
  "total_adjustment_commission" float DEFAULT 0,
  "is_obsolete" boolean DEFAULT false,
  "config" json NOT NULL DEFAULT '{}',
  "created_by" varchar,
  "updated_by" varchar
);

CREATE TABLE "Notifications" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "user_id" varchar NOT NULL,
  "message" text NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false,
  "config" json NOT NULL DEFAULT '{}'
);

CREATE TABLE "NotificationRecipients" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "notification_id" varchar NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false,
  "config" json NOT NULL DEFAULT '{}'
)


-- ChargeBack Table
CREATE TABLE "ChargeBack" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "user" varchar,
  "merchant_user_id" varchar NOT NULL,
  "vendor_user_id" varchar NOT NULL,
  "payin_id" varchar NOT NULL UNIQUE,
  "bank_acc_id" varchar NOT NULL,
  "amount" float NOT NULL,
  "reference_date" TIMESTAMPTZ NOT NULL,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false,
  "config" json NOT NULL DEFAULT '{}',
  "created_by" varchar,
  "updated_by" varchar
);

-- CheckUtrHistory Table
CREATE TABLE "CheckUtrHistory" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "payin_id" varchar NOT NULL,
  "utr" varchar NOT NULL,
  "created_by" varchar,
  "updated_by" varchar,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false,
  "config" json NOT NULL DEFAULT '{}'
);

-- ResetDataHistory Table
CREATE TABLE "ResetDataHistory" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "payin_id" varchar NOT NULL,
  "pre_status" varchar,
  "created_by" varchar,
  "updated_by" varchar,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "is_obsolete" boolean DEFAULT false,
  "config" json NOT NULL DEFAULT '{}'
);

-- Complaints Table
CREATE TABLE "Complaints" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "sno" INTEGER GENERATED BY DEFAULT AS IDENTITY,
  "status" varchar NOT NULL,
  "payin_id" varchar NOT NULL,
  "email" varchar NOT NULL,
  "config" json NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "company_id" varchar NOT NULL,
  "created_by" varchar,
  "updated_by" varchar
);

-- UserOtp Table
CREATE TABLE "UserOtp" (
  "id" varchar PRIMARY KEY DEFAULT (uuid_generate_v4()),
  "user_id" varchar NOT NULL,
  "otp" INTEGER NOT NULL,
  "expiration_time" TIMESTAMPTZ NOT NULL,
  "is_used" boolean DEFAULT false,
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "updated_at" TIMESTAMPTZ DEFAULT (now())
);

-- BeneficiaryAccounts Table
CREATE TABLE "BeneficiaryAccounts" (
  "id" varchar NOT NULL DEFAULT (uuid_generate_v4()),
  "user_id" varchar NOT NULL,
  "bank_name" varchar NOT NULL,
  "acc_holder_name" varchar(255) NOT NULL,
  "acc_no" varchar NOT NULL,
  "ifsc" varchar NOT NULL,
  "upi_id" varchar DEFAULT '',
  "created_at" TIMESTAMPTZ DEFAULT (now()),
  "config" json NOT NULL DEFAULT '{}',
  "updated_at" TIMESTAMPTZ DEFAULT (now()),
  "created_by" varchar,
  "updated_by" varchar,
  "is_obsolete" boolean NOT NULL DEFAULT false,
  "role_id" varchar NOT NULL,
  CONSTRAINT "BeneficiaryAccounts_pkey" PRIMARY KEY ("id")
);

-- Create Indexes
CREATE INDEX ON "Company" ("email");
CREATE INDEX ON "Company" ("contact_no");
CREATE INDEX ON "User" ("user_name");
CREATE INDEX ON "User" ("email");
CREATE INDEX ON "User" ("contact_no");
CREATE INDEX ON "User" ("code");
CREATE INDEX ON "User" ("company_id");
CREATE INDEX ON "User" ("role_id");
CREATE INDEX ON "User" ("designation_id");
CREATE INDEX ON "User" ("is_obsolete");
CREATE INDEX ON "User" ("is_enabled");
CREATE INDEX ON "Merchant" ("code");
CREATE INDEX ON "Merchant" ("company_id");
CREATE INDEX ON "Merchant" ("user_id");
CREATE INDEX ON "Merchant" ("is_obsolete");
CREATE INDEX ON "Merchant" ("is_enabled");
CREATE INDEX ON "Merchant" ("is_test_mode");
CREATE INDEX ON "Merchant" ("dispute_enabled");
CREATE INDEX ON "Merchant" ("is_demo");
CREATE INDEX ON "Vendor" ("code");
CREATE INDEX ON "Vendor" ("company_id");
CREATE INDEX ON "Vendor" ("user_id");
CREATE INDEX ON "Vendor" ("is_obsolete");
CREATE INDEX ON "Role" ("is_obsolete");
CREATE INDEX ON "Designation" ("role_id");
CREATE INDEX ON "Designation" ("is_obsolete");
CREATE INDEX ON "AccessToken" ("user_id");
CREATE INDEX ON "AccessToken" ("company_id");
CREATE INDEX ON "AccessToken" ("is_obsolete");
CREATE INDEX ON "UserHierarchy" ("user_id");
CREATE INDEX ON "UserHierarchy" ("company_id");
CREATE INDEX ON "UserHierarchy" ("is_obsolete");
CREATE INDEX ON "BankAccount" ("bank_used_for");
CREATE INDEX ON "BankAccount" ("user_id");
CREATE INDEX ON "BankAccount" ("company_id");
CREATE INDEX ON "BankAccount" ("is_bank");
CREATE INDEX ON "BankAccount" ("is_enabled");
CREATE INDEX ON "BankAccount" ("is_qr");
CREATE INDEX ON "BankAccount" ("is_obsolete");
CREATE INDEX ON "Payin" ("status");
CREATE INDEX ON "Payin" ("currency");
CREATE INDEX ON "Payin" ("company_id");
CREATE INDEX ON "Payin" ("is_obsolete");
CREATE INDEX ON "Payin" ("is_notified");
CREATE INDEX ON "Payin" ("is_url_expires");
CREATE INDEX ON "Payin" ("one_time_used");
CREATE INDEX ON "Payin" ("sno");
CREATE INDEX ON "Payout" ("status");
CREATE INDEX ON "Payout" ("currency");
CREATE INDEX ON "Payout" ("company_id");
CREATE INDEX ON "Payout" ("merchant_id");
CREATE INDEX ON "Payout" ("bank_acc_id");
CREATE INDEX ON "Payout" ("is_obsolete");
CREATE INDEX ON "Settlement" ("status");
CREATE INDEX ON "Settlement" ("method");
CREATE INDEX ON "Settlement" ("company_id");
CREATE INDEX ON "Settlement" ("user_id");
CREATE INDEX ON "Settlement" ("is_obsolete");
CREATE INDEX ON "Calculation" ("company_id");
CREATE INDEX ON "Calculation" ("user_id");
CREATE INDEX ON "Calculation" ("role_id");
CREATE INDEX ON "Calculation" ("is_obsolete");
CREATE INDEX ON "ChargeBack" ("company_id");
CREATE INDEX ON "ChargeBack" ("payin_id");
CREATE INDEX ON "ChargeBack" ("is_obsolete");
CREATE INDEX ON "BankResponse" ("status");
CREATE INDEX ON "BankResponse" ("company_id");
CREATE INDEX ON "BankResponse" ("bank_id");
CREATE INDEX ON "BankResponse" ("is_obsolete");
CREATE INDEX ON "BankResponse" ("is_used");
CREATE INDEX ON "CheckUtrHistory" ("company_id");
CREATE INDEX ON "CheckUtrHistory" ("payin_id");
CREATE INDEX ON "CheckUtrHistory" ("is_obsolete");
CREATE INDEX ON "ResetDataHistory" ("pre_status");
CREATE INDEX ON "ResetDataHistory" ("company_id");
CREATE INDEX ON "ResetDataHistory" ("payin_id");
CREATE INDEX ON "ResetDataHistory" ("is_obsolete");
CREATE INDEX ON "Complaints" ("status");
CREATE INDEX ON "Complaints" ("company_id");
CREATE INDEX ON "Complaints" ("payin_id");
CREATE INDEX ON "UserOtp" ("user_id");
CREATE INDEX ON "BeneficiaryAccounts" ("user_id");
CREATE INDEX ON "BeneficiaryAccounts" ("acc_no");

-- Add Comments
COMMENT ON COLUMN "Merchant"."config" IS 'site_url, notify_url, return_url, payout_notify_url, api_key, secret_key, public_api_key, banks, "beneficiary": [{bankname, ifsc, account_name_holder, method}]';
COMMENT ON COLUMN "Vendor"."config" IS '"beneficiary": [{bankname, ifsc, account_name_holder, method}]';
COMMENT ON COLUMN "AccessToken"."config" IS 'ip, device_hash etc';
COMMENT ON COLUMN "UserHierarchy"."config" IS '"merchant_admin_user_id || vendor_admin_user_id" : [merchant1user, merchant2user || vendor1user, vendor2user]';
COMMENT ON COLUMN "BankAccount"."config" IS '"merchant" : [merchant1, merchant2]';
COMMENT ON COLUMN "Payin"."config" IS 'notify_url';
COMMENT ON COLUMN "Payout"."config" IS 'notify_url';
COMMENT ON COLUMN "Settlement"."config" IS 'acc_name, acc_no, ifsc, reference_id, rejected_reason, wallet, wallet_address, wallet_balance';
COMMENT ON COLUMN "Complaints"."config" IS 'title, complaint';

-- Add Foreign Key Constraints
ALTER TABLE "User" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "User" ADD FOREIGN KEY ("role_id") REFERENCES "Role" ("id");
ALTER TABLE "User" ADD FOREIGN KEY ("designation_id") REFERENCES "Designation" ("id");
ALTER TABLE "Merchant" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "Merchant" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "Vendor" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "Vendor" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "Designation" ADD FOREIGN KEY ("role_id") REFERENCES "Role" ("id");
ALTER TABLE "AccessToken" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "AccessToken" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "UserHierarchy" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "UserHierarchy" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "BankAccount" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "BankAccount" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "Payin" ADD FOREIGN KEY ("bank_acc_id") REFERENCES "BankAccount" ("id");
ALTER TABLE "Payin" ADD FOREIGN KEY ("merchant_id") REFERENCES "Merchant" ("id");
ALTER TABLE "Payin" ADD FOREIGN KEY ("bank_response_id") REFERENCES "BankResponse" ("id");
ALTER TABLE "Payin" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "Payout" ADD FOREIGN KEY ("bank_acc_id") REFERENCES "BankAccount" ("id");
ALTER TABLE "Payout" ADD FOREIGN KEY ("merchant_id") REFERENCES "Merchant" ("id");
ALTER TABLE "Payout" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "Settlement" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "Settlement" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "Calculation" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "Calculation" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "ChargeBack" ADD FOREIGN KEY ("merchant_user_id") REFERENCES "User" ("id");
ALTER TABLE "ChargeBack" ADD FOREIGN KEY ("vendor_user_id") REFERENCES "User" ("id");
ALTER TABLE "ChargeBack" ADD FOREIGN KEY ("payin_id") REFERENCES "Payin" ("id");
ALTER TABLE "ChargeBack" ADD FOREIGN KEY ("bank_acc_id") REFERENCES "BankAccount" ("id");
ALTER TABLE "ChargeBack" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "BankResponse" ADD FOREIGN KEY ("bank_id") REFERENCES "BankAccount" ("id");
ALTER TABLE "BankResponse" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "CheckUtrHistory" ADD FOREIGN KEY ("payin_id") REFERENCES "Payin" ("id");
ALTER TABLE "CheckUtrHistory" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "ResetDataHistory" ADD FOREIGN KEY ("payin_id") REFERENCES "Payin" ("id");
ALTER TABLE "ResetDataHistory" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "Complaints" ADD FOREIGN KEY ("payin_id") REFERENCES "Payin" ("id");
ALTER TABLE "Complaints" ADD FOREIGN KEY ("company_id") REFERENCES "Company" ("id");
ALTER TABLE "UserOtp" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "BeneficiaryAccounts" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");
ALTER TABLE "BeneficiaryAccounts" ADD FOREIGN KEY ("role_id") REFERENCES "Role" ("id");